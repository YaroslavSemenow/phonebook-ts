{"version":3,"file":"static/js/644.a64c09ba.chunk.js","mappings":"iXAiBe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,cACxBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MAEd,OAAQd,GACN,IAAK,OACHC,EAAQa,GACR,MACF,IAAK,QACHX,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,KAQZC,EAAY,mCAAG,WAAMH,GAAN,oEACnBA,EAAEI,mBAEEZ,EAASa,OAAS,GAHH,uBAIjBC,EAAAA,GAAAA,MAAY,4DAJK,0CAQbT,EAASU,EAAAA,GAAAA,SAAwB,CAAEnB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAAagB,SARhD,OAUnBnB,EAAQ,IACRE,EAAS,IACTE,EAAY,IAZO,2CAAH,sDAelB,OACE,UAACgB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,6BAGA,UAACX,EAAA,EAAD,CAAKH,UAAU,OAAOe,SAAUtB,EAAcW,GAAI,CAAEY,GAAI,GAAxD,WACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,SAAUlC,EACVmC,aAAa,aACb9C,KAAK,OACLc,MAAOd,EACP+C,KAAK,OACLC,UAAQ,EACRC,WAAS,EACTC,MAAM,OACNC,WAAS,OAGb,SAACZ,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,SAAUlC,EACVqC,UAAQ,EACRC,WAAS,EACTF,KAAK,QACLG,MAAM,QACNlD,KAAK,QACLc,MAAOZ,EACP4C,aAAa,aAGjB,SAACP,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,SAAUlC,EACVqC,UAAQ,EACRC,WAAS,EACTjD,KAAK,WACLc,MAAOV,EACP8C,MAAM,WACNH,KAAK,WACLD,aAAa,uBAInB,SAACM,EAAA,EAAD,CACEL,KAAK,SACLE,WAAS,EACTI,QAAS/C,EACTgD,iBAAiB,iBACjBlB,QAAQ,YACRV,GAAI,CAAEY,GAAI,EAAGiB,GAAI,GANnB,kCAUA,SAAChB,EAAA,GAAD,CAAMC,WAAS,EAACgB,eAAe,WAA/B,UACE,SAACjB,EAAA,GAAD,CAAMG,MAAI,EAAV,UACE,SAAC,KAAD,CAAMe,GAAG,WAAWC,MAAO,CAAEC,MAAO,qBAApC,UACE,SAACxB,EAAA,EAAD,CAAYC,QAAQ,QAAQd,UAAU,OAAtC","sources":["pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { authOperations, authSelectors } from 'redux/auth';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport {\n  Avatar,\n  CssBaseline,\n  TextField,\n  Grid,\n  Container,\n  Typography,\n  Box,\n} from '@mui/material';\nimport { toast } from 'react-hot-toast';\n\nexport default function RegisterPage() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(authSelectors.getIsLoading);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password.length < 7) {\n      toast.error('Password is shorter than the minimum allowed length (7).');\n      return;\n    }\n\n    await dispatch(authOperations.register({ name, email, password })).unwrap();\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create account\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                onChange={handleChange}\n                autoComplete=\"given-name\"\n                name=\"name\"\n                value={name}\n                type=\"text\"\n                required\n                fullWidth\n                label=\"Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={handleChange}\n                required\n                fullWidth\n                type=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                value={email}\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={handleChange}\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                label=\"Password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <LoadingButton\n            type=\"submit\"\n            fullWidth\n            loading={isLoading}\n            loadingIndicator=\"Please wait...\"\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Create your account\n          </LoadingButton>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link to=\"../login\" style={{ color: 'rgb(22, 102, 183)' }}>\n                <Typography variant=\"body2\" component=\"span\">\n                  Already have an account? Log in\n                </Typography>\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n"],"names":["RegisterPage","useState","name","setName","email","setEmail","password","setPassword","isLoading","useSelector","authSelectors","dispatch","useDispatch","handleChange","e","target","value","handleSubmit","preventDefault","length","toast","authOperations","unwrap","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","mt","Grid","container","spacing","item","xs","TextField","onChange","autoComplete","type","required","fullWidth","label","autoFocus","LoadingButton","loading","loadingIndicator","mb","justifyContent","to","style","color"],"sourceRoot":""}